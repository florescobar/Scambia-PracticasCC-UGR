/*pipeline {
    agent any
    environment {
        // Definir variables de entorno si es necesario
        APP_ENV = 'production'
    }

    stages {

        stage('Ejecutar Pruebas') {
            environment {
                // Definir la variable de entorno para el ejecutable make
                PATH = "C:\\MinGW\\bin\\:${env.PATH}"
            }
            steps {
                // Ejecutar pruebas PHPUnit utilizando el ejecutable 'make' definido en el PATH
                bat 'cd scambia-api && make test'
            }
        }
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Instalar Composer') {
            steps {
                // Instalar Composer globalmente
                script {
                    def composerHome = tool 'Composer'
                    env.PATH = "${composerHome}/bin:${env.PATH}"
                    sh 'composer --version'
                }
            }
        }

        stage('Instalar Dependencias') {
            steps {
                // Instalar dependencias de Laravel usando Composer
                sh 'composer install --no-interaction --prefer-dist'
            }
        }

        stage('Test') {
            steps {
                script {
                    bat 'make test'
                }
            }
        }
    }
}*/

pipeline {
    agent any
    stages {
        /*stage('Clonar Repositorio') {
            steps {
                // Clonar el repositorio desde tu sistema de control de versiones
                git 'https://github.com/florescobar/Scambia-PracticasCC-UGR.git'
            }
        }*/
        stage('Instalar Composer y Dependencias') {
            steps {
                echo 'Running PHP 8.1 tests inside the container...'
                bat 'php -v'
                // echo 'Installing project composer dependencies...'
                bat 'composer install --no-progress'
                echo 'Running PHPUnit tests...'
                //bat 'php ${WORKSPACE}/artisan test --coverage-html ${WORKSPACE}/report/clover --coverage-clover ${WORKSPACE}/report/clover.xml --log-junit ${WORKSPACE}/report/junit.xml'
            }
        }
        stage('Ejecutar Pruebas') {
            steps {
                // Ejecutar pruebas PHPUnit
                sh 'php artisan test'
            }
        }
    }
}
